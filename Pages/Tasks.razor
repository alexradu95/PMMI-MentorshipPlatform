@page "/tasks"
@using Siemens.MP.Entities
@using Siemens.MP.Data
@using Siemens.MP.Enums
@inject Siemens.MP.Data.Repositories.GenericRepository<Siemens.MP.Entities.Task> TaskRepository
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager


@if (tasks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table' id="tasks">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th>Task Name</th>
                <th>Task Description</th>
                <th>Deadline</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in tasks)
            {
                <tr>
                    <th>@task.Id</th>
                    <td><button class="btn btn-primary" @onclick="@(() => Navigate(task.Name,task.Description,task.Deadline,task.State
                                                                    ))">@task.Name</button></td>
                    <td>@task.Description</td>
                    <td>@task.Deadline</td>
                    <td>@task.State</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td scope="row">#</td>
                <td>
                    <input placeholder="Task Name" @bind="taskName" />
                </td>
                <td>
                    <input placeholder="Description" @bind="taskDescription" />
                </td>
                <td>
                    <input type="date" @bind="deadline" />
                </td>
                <td>
                    <select id="selectstatus" @bind="status">
                        <option value="" selected disabled hidden>Status of task</option>
                        <option value="todo">To do</option>
                        <option value="ongoing">Ongoing</option>
                        <option value="finished">Finished</option>
                    </select>
                </td>
            </tr>
        </tfoot>
    </table>

    <button @onclick="AddTask">Add</button>
}
@code {

    private string taskName;
    private string taskDescription;
    private DateTime deadline;
    private StateOfTask status;
    List<Siemens.MP.Entities.Task> tasks;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        tasks = await TaskRepository.GetAll();
    }

    private void AddTask()
    {
        Siemens.MP.Entities.Task newTask = new Siemens.MP.Entities.Task
        {
            Name = taskName,
            Description = taskDescription,
            Deadline = deadline,
            State = status
        };
        TaskRepository.Insert(newTask);
        OnInitializedAsync();
        ResetFieldToDefault();
    }
        public void Navigate(string name, string desc, DateTime deadline , StateOfTask state)
    {
        navigationManager.NavigateTo($"/detailedtask/{name}/{desc}/{state.ToString()}/{deadline.ToString().Replace(@"/",".")}");

    }

    private void ResetFieldToDefault()
    {
        taskName = string.Empty;
        taskDescription = string.Empty;
    }


}
