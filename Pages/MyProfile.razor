@page "/myprofile"
@inject Siemens.MP.Data.ApplicationDbContext DbContext
@using Siemens.MP.Entities;
<head>
    <link rel="stylesheet" href="/css/MyProfile.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body>
    <div class="modal-body row">
        <div class="col-md-4">
            <div class="card profile">
                <img src="/css/bootstrap/img.jpg" alt="John" class="card-img-top imgprofile">
                <p class="title">John Wick</p>

                <div class="text-card">
                    <p><i class="fa fa-home"></i>Brasov</p>
                    <p><i class="fa fa-university"></i>Matematica si Informatica</p>
                    <p><i class="fa fa-phone-square"></i>0760030989</p>
                    <hr>
                    <p><b><i class="fa fa-asterisk info"></i>Skills</b></p>
                    <div class="skill-bar">
                        <div class="progress-bar" style="width:80%">Language C# 80%</div>
                    </div>
                </div>

                <center>
                    <p>
                        <a href="https://www.facebook.com/ionuut.alban">
                            <i class="fa fa-facebook-square"></i>
                        </a>
                        <a href="https://github.com/albanionut">
                            <i class="fa fa-github" aria-hidden="true"></i>
                        </a>
                    </p>
                </center>

            </div>
        </div>




        <div class="col-md-8">

            <div class="card" id="profile" style="margin-bottom:50px;">

                <div class="panel panel-default">
                    <div class="panel-heading panelbackground">
                        <div class="panel-title pull-left titlecard">
                            Projects
                        </div>
                        <div class="pull-right">
                            <input type="text" class="myInput" onkeyup="searchFunction()" placeholder="Search for projects..">
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <hr style="margin-top:0px;margin-bottom:0px;">

                <ul id="myProjectList">
                    <li><a href="#">Project 1</a></li>
                    <li><a href="#">Project 2</a></li>
                    <li><a href="#">Project 3</a></li>
                </ul>

            </div>

            <div class="card" id="profile" style="margin-bottom:50px; margin-top:30px;">

                <div class="panel panel-default">
                    <div class="panel-heading panelbackground">
                        <div class="panel-title pull-left titlecard">
                            Tasks
                        </div>
                        <div class="pull-right">
                            <input type="text" class="myInput" @bind-value="@searchTerm" @bind-value:event="oninput" placeholder="Search for projects.." />
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <hr style="margin-top:0px;margin-bottom:0px;">


                <ul class="myProjectList">
                    @foreach (var task in filteredTasks)
                    {
                        <li>
                            <a href="#" class="align-content-center">

                                @task.Name
                                @if (task.State == Enums.StateOfTask.TO_DO)
                                {
                                    <span class="badge badge-primary badge-pill pull-right spanprofile list-group-item-danger">@task.State</span>
                                }
                                else if (task.State == Enums.StateOfTask.DONE)
                                {
                                    <span class="badge badge-primary badge-pill pull-right spanprofile list-group-item-success">@task.State</span>
                                }
                                else if (task.State == Enums.StateOfTask.CODE_REVIEW)
                                {
                                    <span class="badge badge-primary badge-pill pull-right spanprofile list-group-item-light">@task.State</span>
                                }
                                else if (task.State == Enums.StateOfTask.ONGOING)
                                {
                                    <span class="badge badge-primary badge-pill pull-right spanprofile list-group-item-info">@task.State</span>
                                }
                            </a>
                        </li>
                    }
                </ul>


            </div>

        </div>
    </div>
</body>
@code {
    private IList<Siemens.MP.Entities.Task> tasks;
    private string searchTerm { get; set; } = "";
    private String importance;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        tasks = DbContext.Tasks.ToList();
    }
    private IList<Siemens.MP.Entities.Task> filteredTasks => tasks.Where(i => i.Name.ToLower().Contains(searchTerm.ToLower())).ToList();



}
