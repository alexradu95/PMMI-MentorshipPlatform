@page "/projects"
@using Siemens.MP.Enums
@using Siemens.MP.Entities
@inject Siemens.MP.Data.ApplicationDbContext DbContext
@inject Siemens.MP.Data.Repositories.GenericRepository<Project> ProjectRepository

@if (projects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="modal-body row">
        <div class="project-first-column">
            <h3>Projects</h3>
            <ol class="list-group list-group-flush">
                @foreach (Siemens.MP.Entities.Project project in projects)
                {
                    <li class="list-group-item">
                        <button class="btn btn-primary" @onclick="@(() => ChangeTheProjectID(project.Id))">@project.Title</button>
                        <span class="issue-link-summary">@project.Description</span>
                    </li>
                }
            </ol>
        </div>
        <div class="project-second-column">
                <Siemens.MP.Pages.Components.ProjectTasks @bind-IdProject="ProjectID" ></Siemens.MP.Pages.Components.ProjectTasks>
        </div>
    </div>
}


@code {

    private IList<Siemens.MP.Entities.Project> projects;

    [Parameter]
    public int ProjectID { get; set; }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        projects = await ProjectRepository.GetAll();
    }
    private void ChangeTheProjectID(int projectID)
    {
        ProjectID = projectID;
    }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

}
