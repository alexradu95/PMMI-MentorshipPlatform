@using Siemens.MP.Enums
@inject Siemens.MP.Data.Repositories.GenericRepository<Siemens.MP.Entities.Task> TaskRepository

    <div class="row">
        @if (IdProject == 1)
        {
            @foreach (Siemens.MP.Entities.Task task in tasks) if (task.State == Enums.StateOfTask.TO_DO)
                {
                    <div class="col-sm">

                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@task.Name</h5>
                                <p class="card-text">@task.Description</p>
                                <p class="card-text">@task.Deadline</p>
                            </div>
                        </div>
                    </div>
                }
        }
        @if (IdProject == 2)
        {
            @foreach (Siemens.MP.Entities.Task task in tasks) if (task.State == Enums.StateOfTask.DONE)
                {
                    <div class="col-sm">

                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@task.Name</h5>
                                <p class="card-text">@task.Description</p>
                                <p class="card-text">@task.Deadline</p>
                            </div>
                        </div>
                    </div>
                }
        }
    </div>

@code {
    private IList<Siemens.MP.Entities.Task> tasks = new List<Siemens.MP.Entities.Task>();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        tasks = await TaskRepository.GetAll();
    }

    [Parameter]
    public int IdProject { get; set; }
    [Parameter]
    public EventCallback<int> IdProjectChanged { get; set; }
    [Parameter]
    public StateOfTask StateOfTask { get; set; }

    private int NumberOfComponents = 0;

}
