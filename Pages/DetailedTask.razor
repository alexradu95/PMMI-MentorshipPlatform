@page "/detailedtask/{taskName}/{taskDescription}/{taskState}/{taskDeadline}"
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.WebUtilities
@using Siemens.MP.Enums
<link rel="stylesheet" href="/css/DetailedTask.css">
<body>
    <h2><i>@taskName</i></h2>
    <div class="container upper-container">
        <div class="float-left">
            <label><b><i>Task Description:</i></b></label>
            <div class="card">
                <textarea readonly style="width:700px" class="border-style" rows="5">@taskDescription</textarea>
            </div>
            <div class="form-group comment-section">
                <label><b><i>Comment Section: </i></b></label>
                <div class="media  border-style p-3 ">
                    <img src="/css/bootstrap/img.jpg" alt="John Doe" class="mr-3 mt-3 rounded-circle" style="width:60px;">
                    <div class="media-body">
                        <h4>John Doe <small><i>Posted on February 19, 2016</i></small></h4>
                        <textarea readonly rows="5" class="comment-text form-control">Lorem ipsum..Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum...Lorem ipsum....</textarea>
                    </div>
                </div>
                <div class="form-group ">
                    <textarea style="height:90px" class="form-control border-style commet-area" rows="7"></textarea>
                    <button type="button" class="btn btn-primary button1">Submit</button>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="float-right right-side-container ">
            <ul class="list-group ">
                <li class="list-group-item py-4 border-style size-of-details">Assignee: <img src="/css/bootstrap/img.jpg" alt="John Doe" class="mr-1 mt-1 rounded-circle" style="width:40px;" /> Baies Darius Incaunnume alfabetuefrumos </li>
                <li class="list-group-item py-4 border-style size-of-details">Reporter: <img src="/css/bootstrap/img.jpg" alt="John Doe" class="mr-1 mt-1 rounded-circle" style="width:40px;" /> Alban the big nosed one</li>
                <li class="list-group-item py-4 border-style size-of-details">Status: <span class="badge badge-secondary">@taskState</span></li>
                <li class="list-group-item py-4 border-style size-of-details">Priority: <span class="badge badge-danger">Urgent</span> </li>
                <li class="list-group-item py-4 border-style size-of-details">Created Date : @date1</li>
                <li class="list-group-item py-4 border-style size-of-details">Due Date: @taskDeadline </li>
                <li class="list-group-item py-4 border-style size-of-details">Remaining Time:  </li>
            </ul>
        </div>
    </div>

</body>
@code {
    public DateTime date1 = DateTime.Now;
    public DateTime date2 = DateTime.Now.AddDays(1);
    [Parameter]
    public string taskName { get; set; }
    [Parameter]
    public string taskDescription { get; set; }
    [Parameter]
    public string taskDeadline { get; set; }
    [Parameter]
    public string taskState { get; set; }

    protected override void OnInitialized()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri); //you can use IURIHelper for older versions

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("taskName", out var taskName))
        {
            var name = taskName.First();
        }

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("taskDescription", out var taskDescription))
        {
            var desc = taskDescription.First();

        }        
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("taskDeadline", out var taskDeadline))
        {
            var deadline = taskDeadline.First();
        }        
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("taskState", out var taskState))
        {
            var state = taskState.First();
        }
    }
}

